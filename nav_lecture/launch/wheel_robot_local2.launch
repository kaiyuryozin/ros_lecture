<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <arg name="model" default="$(find nav_lecture)/urdf/wheel_robot_normal.urdf" />
  <arg name="rvizconfig" default="$(find nav_lecture)/rviz/wheel_robot_local2.rviz" />
  <arg name="joy" default="false" />
  <arg name="tracking_noise" default="0.0" />
  <arg name="tracking_hz" default="10" />
  <param name="robot_description" type="str" textfile="$(arg model)"/>
  <param name="/use_sim_time" value="true" />

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="use_sim_time" value="true"/>
    <arg name="world_name" value="$(find nav_lecture)/world/test1.world"/>
    <arg name="paused" value="false"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model wheel_robot" />

  <rosparam command="load" file="$(find nav_lecture)/config/diff_drive.yaml" />  
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
        ns="/wheel_robot" args="joint_state_controller diff_drive_controller"/>

  <node name="robot_state_publisher" pkg="robot_state_publisher"
        type="robot_state_publisher"
        respawn="false" output="screen" ns="/wheel_robot"/>
   
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true" />


  <!-- amcl -->
  <node pkg="map_server" type="map_server" name="map_server" args="$(find nav_lecture)/resources/room1_map.yaml"/>
  <node pkg="amcl" type="amcl" name="amcl" clear_params="true">
    <param name="base_frame_id" value="wheel_robot/base_link" />
    <param name="odom_frame_id" value="wheel_robot/odom" />
    <remap from="scan" to="wheel_robot/laser/scan" />
  </node>

  <group if="$(arg joy)">
    <node name="joy_node"   pkg="joy" type="joy_node" />
    <node name="basic_twist_publisher" pkg="basic_lecture" type="basic_twist_publisher">
      <remap from="cmd_vel" to="/wheel_robot/diff_drive_controller/cmd_vel" />
    </node>
  </group>

<!--
  <node name="tf_map_to_odom" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 map wheel_robot/odom 100" />
-->
  <!-- robot_localization -->
  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_se" clear_params="true">
    <rosparam command="load" file="$(find nav_lecture)/config/ekf_localization.yaml" />
    <remap from="/odometry/filtered" to="/wheel_robot/ekf/odom" />
    <remap from="set_pose" to="/wheel_robot/ekf/set_pose" />
  </node>
</launch>
